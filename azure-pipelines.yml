trigger:
  batch: true
  branches:
    include:
      - master
      - develop
  paths:
    exclude:
      - LICENSE
      - README.md

pool:
  vmImage: windows-latest

variables:
  configuration: Release

steps:
  - task: GitVersion@4
    displayName: Set version
    inputs:
      updateAssemblyInfo: true

  - task: DotNetCoreCLI@2
    displayName: Build
    inputs:
      command: build
      projects: '**/*.csproj'
      configuration: $(configuration)
  
  - task: DotNetCoreCLI@2
    displayName: Test
    inputs:
      command: test
      projects: '**/*Test*.csproj'
      configuration: $(configuration)
      nobuild: true
      arguments: /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura /p:Include="[$(System.TeamProject)*]*" /p:Exclude="[*Test*]*"

  - script: |
      dotnet tool install -g dotnet-reportgenerator-globaltool
      reportgenerator -reports:$(Build.SourcesDirectory)/**/coverage.cobertura.xml -targetdir:$(Build.SourcesDirectory)/CodeCoverage -reporttypes:"Cobertura"
    displayName: Generate code coverage report

  - task: PublishCodeCoverageResults@1
    displayName: Publish code coverage results
    inputs:
      codeCoverageTool: Cobertura
      summaryFileLocation: '$(Build.SourcesDirectory)/CodeCoverage/Cobertura.xml'

  - task: DotNetCoreCLI@2
    displayName: Pack
    inputs:
      command: pack
      packDirectory: '$(Build.ArtifactStagingDirectory)'
      workingDirectory: '$(Join-Path -Path Build.SourcesDirectory -ChildPath "src")'
      configuration: $(configuration)
      nobuild: true
 
  - task: PublishBuildArtifacts@1
    displayName: Publish build artifacts
    inputs:
      pathtoPublish: '$(Build.ArtifactStagingDirectory)'