trigger:
  batch: true
  branches:
    include:
      - master
      - develop
  paths:
    exclude:
      - LICENSE
      - README.md

pool:
  vmImage: 'Ubuntu-16.04'

variables:
  versionPrefix: '0.1'
  versionPrerelease: alpha
  configuration: 'Release'
  srcDirectory: '$(Join-Path -Path build.sourcesDirectory -ChildPath "src")'

name: 

steps:
  - powershell: |
      $version = "$versionPrefix$(if ($versionPrerelease) {'-'} else {''})$versionPrerelease.$(rev:.r)"
      Write-Host "##vso[task.setvariable variable=version;]$version"
      Write-Host "Version setted to $env:version"
      Write-Host "##vso[build.updatebuildnumber]$version"
      Write-Host "Build number updated to $(build.buildNumber)"
    displayName: set version

  - task: DotNetCoreCLI@2
    displayName: dotnet build
    inputs:
      command: build
      projects: '**/*.csproj'
      configuration: $(configuration)
  
  - task: DotNetCoreCLI@2
    displayName: dotnet test
    inputs:
      command: test
      projects: 'test/**/*.csproj'
      configuration: $(configuration)
      nobuild: true

  - task: DotNetCoreCLI@2
    displayName: dotnet pack
    inputs:
      command: pack
      packDirectory: '$(build.artifactStagingDirectory)'
      workingDirectory: '$(srcDirectory)'
      configuration: $(configuration)
      nobuild: true
 
  - task: PublishBuildArtifacts@1
    displayName: publish artifacts
    #condition: $(and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master')))
    inputs:
      pathtoPublish: '$(build.artifactStagingDirectory)'

  - task: DotNetCoreCLI@2
    displayName: dotnet nuget push
    #condition: $(and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master')))
    inputs:
      command: custom
      custom: nuget
      arguments: push $(build.artifactStagingDirectory)/*.nupkg --source https://api.nuget.org/v3/index.json --no-service-endpoint --api-key $(nuget.apiKey)      
